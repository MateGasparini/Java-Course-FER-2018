This is sample text.
{$ FOR i 1 10 1 $}
	This is {$= i $}-th time this message is generated.
{$END$}
{$FOR i 0 10 2$}
	sin({$=i$}^2) = {$= i i * @sin "0.000" @decfmt $}
{$END$}

TEXT ESCAPING :
HE \\ LLO \{$ I AM JUST TEXT (otherwise this would not work). $}

STRING ESCAPING:
{$= "\ta\tb\tc	d	e" $}

{$= "First Line\nSecond Line
Third Line" $}
When the String is restored back as text, the tab and the new line characters
do not change to two characters (backslash followed by n|r|t), but they
are simply restored as one character. This is less computationally intense
because no replacing of substrings is done (and really there is no need to do that).

{$= "quotes: \" backslash: \\" $}
The String is stored in the ElementString.value where it does not
contain backslashes, but when the ElementString.asText() method is called,
the backslashes reappear (so the text can be parsed again and again
with the same resulting structure without failing).